name: iOS starter workflow

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    name: Export IPA
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Archive iOS App
        env:
          scheme: ${{ 'default' }}
        run: |
          # Archive the app to create an .xcarchive file
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild -scheme "$scheme" -"$filetype_parameter" "$file_to_build" archive -archivePath $PWD/build/$scheme.xcarchive CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      - name: Export IPA
        env:
          scheme: ${{ 'default' }}
        run: |
          # Export the IPA from the archive
          if [ $scheme = default ]; then scheme=$(cat default); fi
          export_options_plist="ExportOptions.plist" # Create an ExportOptions.plist file as needed
          xcodebuild -exportArchive -archivePath $PWD/build/$scheme.xcarchive -exportPath $PWD/build -exportOptionsPlist $export_options_plist CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
      - name: Upload IPA as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-IPA
          path: $PWD/build/*.ipa
